/********************************************************/
//
//  概要
//      エンコーダ関連
//  作成者
//		K.ishimori @ TUTrobo
//
/********************************************************/

#ifndef __ENC_H__
#define __ENC_H__

/********************************************************/
//  TUTrobo
//
//  概要
//      エンコーダ関連 プロトタイプ宣言
/********************************************************/
void enc_init(void);						//位相計数モードの設定
int enc_ctrl(double distEnd,short ch,short num,double* duty); // エンコーダによるフィードバック

/********************************************************/
//  TUTrobo
//
//  概要
//      エンコーダ関連 エンコーダの制御パラメータ
/********************************************************/
#define ENC_NUM 2		//エンコーダの使用数
#define ENC_AIM_MAX 3   //目標値の最大数

/********************************************************/
//  TUTrobo
//
//  概要
//      エンコーダ関連設定 エンコーダ制御のインフォメーション
/********************************************************/
struct enc_information
{

	double ratio;   //速度比
	double adm;		//許容誤差
	double THO;		//一回転においての進む距離
	double K;		//比例ゲイン
	double Kd;		//微分ゲイン
	double Ki;      //積分ゲイン
	
};

/********************************************************/
//  TUTrobo
//
//  概要
//      エンコーダ関連設定 エンコーダコンディション
/********************************************************/
struct enc_condition
{
	int cnt_now;		/* 現在のカウント値 */
	int cnt_old;		/* 過去のカウント値 */
	int cnt_diff;		/* カウントの差 */
	double dist_now;	/* 現在の移動距離 */
	double dist_old; 	/* 過去の移動距離 */
	
	double er;			/* 比例成分 */
	double d_er;		/* 微分成分 */
	double i_er;		/* 積分成分の累積地 */	
};


#endif // __ENC_H__